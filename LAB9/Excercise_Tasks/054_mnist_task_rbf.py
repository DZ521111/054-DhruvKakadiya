# -*- coding: utf-8 -*-
"""054_MNIST_Task_RBF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TraV184Msi9oAzv9pG6cH3vRGRDKVigI
"""

'''
Author: Dhruv B kakadiya

'''

# importing libraries

import sys
import numpy as np

# for plotting
import matplotlib.pyplot as plt

# for accuracy, precision, recall.
from sklearn import svm, metrics
from sklearn.model_selection import train_test_split

# for dataset
from sklearn.datasets import load_digits

main_data = load_digits()

main_data

main_data.data.shape

# target values
main_data.target

# splitting data into train and test part.

X_train, X_test, y_train, y_test = train_test_split(main_data.data, main_data.target, test_size = 0.3, train_size = 0.2 ,random_state = 54)

# Linear SVM kernal Classifier Model

lsvmc = svm.SVC(kernel = "linear")

lsvmc.fit(X_train, y_train)

y_linear_pred = lsvmc.predict(X_test)

print("Accuracy:", metrics.accuracy_score(y_test, y_linear_pred))

"""# **96.29% Accuracy**

# Polynomial Classifier
"""

# model

psvmc = svm.SVC(kernel='poly')

psvmc.fit(X_train, y_train)

y_polynomial_pred = psvmc.predict(X_test)

print("Accuracy:", metrics.accuracy_score(y_test, y_polynomial_pred))

"""# **97.59% Accuracy**

# RBF SVM Classifier
"""

# RBF kernel model

rbfsvmc = svm.SVC(kernel='rbf')

rbfsvmc.fit(X_train, y_train)

y_rbf_pred = rbfsvmc.predict(X_test)

print("Accuracy:", metrics.accuracy_score(y_test, y_rbf_pred))

"""# **97.03% Accuracy**"""

